import itertools
import os
import time
from astropy.io import fits
import numpy as np
from Asterix import main_THD, Asterix_root

# please replace with your own parameter file
your_directory = Asterix_root
your_parameter_file_name = 'thd2_setups/Example_param_file_10jul24.ini'

parameter_file_path = os.path.join(your_directory, your_parameter_file_name)

modesnb = 400  # 1587

# Read actuator list from file
dm3_actuators_array = fits.getdata('/Users/ilaginja/asterix_data/Labview/20240903_16-34-07_HLC_fb06a12d/Base_Matrix_DM3.fits')
dm3_act_list = np.sum(dm3_actuators_array, axis=0)
active_actuators = np.where(dm3_act_list != 0)
actuator_pairs = itertools.combinations_with_replacement(active_actuators[0], r=2)

# Hard-coded actuator list
# active_actuators = np.array([44, 45,  46,  47,  48,  49,  50,  51,  74,  75,  76,  77,  78,
#                             79,  80,  81,  82,  83,  84,  85, 104, 105, 106, 107, 108, 109,
#                            110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 135, 136, 137,
#                            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
#                            151, 152, 153, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
#                            176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 197, 198,
#                            199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
#                            212, 213, 214, 215, 216, 217, 218, 228, 229, 230, 231, 232, 233,
#                            234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
#                            247, 248, 249, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266,
#                            267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279,
#                            280, 281, 282, 283, 284, 291, 292, 293, 294, 295, 296, 297, 298,
#                            299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311,
#                            312, 313, 314, 315, 316, 322, 323, 324, 325, 326, 327, 328, 329,
#                            330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342,
#                            343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359,
#                            360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372,
#                            373, 374, 375, 376, 377, 378, 379, 380, 381, 386, 387, 388, 389,
#                            390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402,
#                            403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 418, 419,
#                            420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
#                            433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
#                            446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461,
#                            462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
#                            475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489,
#                            490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
#                            503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517,
#                            518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
#                            531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 546,
#                            547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
#                            560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
#                            573, 574, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
#                            589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
#                            602, 603, 604, 605, 610, 611, 612, 613, 614, 615, 616, 617, 618,
#                            619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
#                            632, 633, 634, 635, 636, 637, 642, 643, 644, 645, 646, 647, 648,
#                            649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
#                            662, 663, 664, 665, 666, 667, 668, 669, 675, 676, 677, 678, 679,
#                            680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
#                            693, 694, 695, 696, 697, 698, 699, 700, 701, 707, 708, 709, 710,
#                            711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
#                            724, 725, 726, 727, 728, 729, 730, 731, 732, 740, 741, 742, 743,
#                            744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
#                            757, 758, 759, 760, 761, 762, 763, 764, 772, 773, 774, 775, 776,
#                            777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
#                            790, 791, 792, 793, 794, 795, 805, 806, 807, 808, 809, 810, 811,
#                            812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824,
#                            825, 826, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
#                            849, 850, 851, 852, 853, 854, 855, 856, 857, 871, 872, 873, 874,
#                            875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
#                            888, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
#                            917, 918, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948])
# actuator_pairs = itertools.combinations_with_replacement(active_actuators, r=2)

for pair in actuator_pairs:
    print(f"Actuator pair: {pair}")
    print(f'{pair[0]},{pair[1]}')

    start_time = time.time()
    main_THD.runthd2(parameter_file_path,
                     NewDMconfig={'DM1_active': True},
                     NewEstimationconfig={'estimation': 'pw',
                                          'posprobes': (pair[0], pair[1])},
                     NewCorrectionconfig={
                         'DH_side': "Full",
                         'correction_algorithm': "efc",
                         'Nbmodes_OnTestbed': modesnb
                     },
                     NewLoopconfig={
                         'Nbiter_corr': [50],
                         'Nbmode_corr': [modesnb]
                     },
                     NewSIMUconfig={'Name_Experiment': f"HLC_783nm_{pair[0]}-{pair[1]}"},
                     silence=True)
    print('time correction 2DM pw efc', time.time() - start_time)
    print("")
